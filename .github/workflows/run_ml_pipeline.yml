name: Run full ML pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Install dependencies
        run: pip install kagglehub

      - name: Install Kaggle CLI
        run: pip install kaggle

      - name: Set up Kaggle credentials
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"${{ secrets.KAGGLE_USERNAME }}\",\"key\":\"${{ secrets.KAGGLE_KEY }}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Download dataset from Kaggle
        run: |
          mkdir -p data
          kaggle datasets download andrewmvd/lung-and-colon-cancer-histopathological-images -p data/

      - name: List files after download
        run: ls -lh data

      - name: Unzip dataset
        run: unzip data/*.zip -d data/Lung_and_Colon_Cancer

      - name: List files after unzip
        run: ls -lhR data/Lung_and_Colon_Cancer

      - name: Split the dataset
        run: python3 scripts/split_dataset.py

      - name: Upload split dataset as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lc25000-split
          path: data/lc25000_split/

      - name: Remove old model checkpoints
        run: rm -f saved_models/*.pth

      - name: Train the model
        run: python3 -m scripts.train

      - name: Upload best model artifact
        uses: actions/upload-artifact@v4
        with:
          name: best-model
          path: saved_models/
          
      - name: Upload class names JSON
        uses: actions/upload-artifact@v4
        with:
          name: class-names
          path: results/class_names.json

      - name: Evaluate on test set
        run: python3 -m scripts.evaluate_on_test

      - name: Generate Grad‑CAM for a sample image
        run: python3 -m scripts.gradcam
  
      - name: Upload evaluation and Grad‑CAM outputs
        uses: actions/upload-artifact@v4
        with:
          name: eval-gradcam-results
          path: outputs/

      - name: Save all final artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ml-results
          path: |
            saved_models/
            results/
            outputs/
